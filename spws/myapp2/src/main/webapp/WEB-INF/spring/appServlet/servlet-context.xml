<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 폴더 다 뒤져서 annotation 해석해서 객체 만들어라. @Controller, @Service, @Repository 있는 클래스들 전부 객체 만들고 서로 주입하고
		<context: component-scan base-package="com.kwak.mycompany"/>
			com.kwak.mycompany 아래에 있는 모든 파일들 다 찾아봐라.
	 -->
	<!-- 
	자원 폴더들을 url하고 맵핑한다.
	http://127.0.0.1:9000/myhome1/upload
	실제 물리적 위치와 가상주소랑 맵핑하는 역할을 한다. 
	 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- Controller에서 return "파일명"을 했을 때 이 객체가 작동하면서 /WEB-INF/views/파일명+".jsp"를 해서 실제 jsp 파일을 호출하도록 한다.  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kwak.mycompany" />
	
	<!-- 파일 업로드 객체 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="20971520"></beans:property>
      <beans:property name="maxInMemorySize" value="10485760"></beans:property>
  </beans:bean>
  
	<!-- Advice를 자동으로 인식 -->
	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class="true">
		<aop:pointcut id="txAdvisePointCut" expression="execution(public * com.kwak.mycompany.*.*Service.*(..))"/>
		<aop:advisor id="transactionAdvisor" pointcut-ref="txAdvisePointCut" advice-ref="txAdvice"/>
	</aop:config>
	
</beans:beans>
