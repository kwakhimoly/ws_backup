# 튜플은 리스트와 유사.
# 차이 : 리스트 - 데이터 읽기, 쓰기 / 튜플 - 데이터 읽기(read only)
# 튜플은 임시로 데이터를 한 덩어리로 묶어주는 역할을 함
# 현재 나오는 함수 포인터형 언어들은 다 제공한다.

a, b = 5, 6
print("a= ", a)
print("b= ", b)

a = (1,2,3,4,5,6)
print(a, type(a)) # 타입이 tuple로 나옴

# 인덱싱과 슬라이싱 적용 된다. 단, 인덱싱과 슬라이싱을 통해 값 바꾸는 것은 불가능(read only니까!)
# a[0]=10 # 예외 발생

for i in a:
    print(i)

print(a[0:3])
print(a[::-1])
print("-------")


# 함수 만들기
def add(x,y):
    x = x*2
    y = y*2
    
    return x, y # 원래는 함수는 값을 하나만 반환해야 한다.
    # 하나만 반환해야 하니까 두 개를 튜플로 묶어서 하나만 보낸다. -> 튜플형으로 반환
    # 하나만 반환할 경우 -> int 형으로 반환됨

x=1
y=7
# 매개변수와 함수 밖의 변수는 같은 변수가 아님
print(type(add(x,y)))
x,y = add(x,y) # 함수 실행 후 결과를 tuple로 반환
# 별도의 변수에 tuple 값을 하나씩 할당
print("x= ",x)
print("y= ",y)