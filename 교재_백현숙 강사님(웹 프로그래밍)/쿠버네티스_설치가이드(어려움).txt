==============================================
쿠버네티스 클러스터 구성  
==============================================


swapoff -a && sed -i '/swap/s/^/#/' /etc/fstab

반드시 root 계정으로 
모든 노드에 kubeadm, kubelet and kubectl 패키지 설치하기 
1) Update the apt package index and install packages needed to use the Kubernetes apt repository:
	# apt-get update
	# apt-get install -y apt-transport-https ca-certificates curl

2) Download the Google Cloud public signing key:
	# curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

3) Add the Kubernetes apt repository:
	# echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

4) Update apt package index, install kubelet, kubeadm and kubectl, and pin their version:
	# apt-get update
	########## apt-get install -y kubelet kubeadm kubectl 너무 최신버전임 
	# sudo apt-get install -y kubelet=1.21.0-00 kubeadm=1.21.0-00 kubectl=1.21.0-00
	# apt-mark hold kubelet kubeadm kubectl 업그레이드못하게 막는거 


도커의 Cgroupfs 구성 수정하기 
# mkdir /etc/docker 
# cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

# systemctl daemon-reload
# systemctl restart docker

kubeadm init 명령을 통해서 클러스터를 생성한다. 
문제시 

kubeadm reset 
kubeadm init

# kubeadm init    -- 꼭 마스터에서만 


명령 구문 끝에 쿠버네티스 클러스터에 조인하기 위한 명령어 구문을 저장해둔다.
==> kubeadm join 192.168.137.101:6443 --token k73e80.otf7kbdnbxvc9qvk \
        --discovery-token-ca-cert-hash sha256:76507fe082ede68174b6e324f3c72dd0bfd70b78a186c7b46efa26fbf893fd74 (enter)






#cat /etc/apt/sources.list.d/kubernetes.list-확인 

# export KUBECONFIG=/etc/kubernetes/admin.conf       쉘에만 저장된다. 
# echo $KUBECONFIG 
vi ~/.bash_profile  영구히 사용하고 싶으면 
/etc/kubernetes/admin.conf


워커노드에서는 조인이 끝난후에 - 이것만 워커노드임 
저장된 kubeadm join 구문 각 워커노드에서 실행 -- 두번째 노드
모든 워커 노드 # kubeadm join 192.168.137.101:6443 --token k73e80.otf7kbdnbxvc9qvk \
        --discovery-token-ca-cert-hash sha256:76507fe082ede68174b6e324f3c72dd0bfd70b78a186c7b46efa26fbf893fd74


#####################################################
네트워크 연결하기 이거 안하면 ready 안된다. - 마스터에서만 
######################################################
CNI (Container Network Interface) 기반 Pod 네트워크 추가 기능 구성한다.
# curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml -O
# kubectl apply -f calico.yaml


클러스터 조인 상태 확인 - 마스터에 와서 확인하기 
# kubectl get nodes


